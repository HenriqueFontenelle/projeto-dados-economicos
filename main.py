# Arquivo: main.py
import streamlit as st
import subprocess
import sys
import os

def check_requirements():
    """Verifica se todas as depend√™ncias est√£o instaladas"""
    try:
        import pandas, numpy, matplotlib, seaborn, requests, streamlit, sqlalchemy
        import sklearn, plotly
        return True
    except ImportError:
        return False

def run_setup():
    """Executa o script de configura√ß√£o"""
    subprocess.check_call([sys.executable, "setup.py"])
    st.success("Ambiente configurado com sucesso!")

def collect_data():
    """Executa o script de coleta de dados"""
    subprocess.check_call([sys.executable, "data_collector.py"])
    st.success("Dados coletados com sucesso!")

def run_dashboard():
    """Executa o dashboard principal"""
    subprocess.Popen([sys.executable, "-m", "streamlit", "run", "app.py"])

def run_ml_dashboard():
    """Executa o dashboard de machine learning"""
    subprocess.Popen([sys.executable, "-m", "streamlit", "run", "ml_app.py"])

# Interface principal
st.set_page_config(
# Arquivo: main.py (continua√ß√£o)
    page_title="Sistema de An√°lise Econ√¥mica - BCB",
    page_icon="üìä",
    layout="wide"
)

st.title("Sistema de An√°lise Econ√¥mica com Dados do Banco Central do Brasil")
st.markdown("""
Este sistema permite coletar, visualizar e analisar dados econ√¥micos do Banco Central do Brasil,
al√©m de criar modelos de machine learning para previs√£o de indicadores.
""")

# Verificar depend√™ncias
if not check_requirements():
    st.warning("Algumas depend√™ncias n√£o est√£o instaladas.")
    if st.button("Instalar Depend√™ncias"):
        run_setup()

# Menu principal
st.header("Escolha uma op√ß√£o:")

col1, col2, col3 = st.columns(3)

with col1:
    st.subheader("Coleta de Dados")
    st.markdown("Atualiza a base de dados com os √∫ltimos dados dispon√≠veis nas APIs do BCB.")
    if st.button("Coletar Dados"):
        with st.spinner("Coletando dados..."):
            collect_data()

with col2:
    st.subheader("Dashboard Econ√¥mico")
    st.markdown("Visualize os indicadores econ√¥micos e suas tend√™ncias.")
    if st.button("Abrir Dashboard"):
        run_dashboard()
        st.success("Dashboard aberto em uma nova aba!")

with col3:
    st.subheader("Previs√µes com ML")
    st.markdown("Use machine learning para prever tend√™ncias futuras dos indicadores.")
    if st.button("Abrir Previs√µes"):
        run_ml_dashboard()
        st.success("Dashboard de ML aberto em uma nova aba!")

# Informa√ß√µes adicionais
st.header("Documenta√ß√£o")
st.markdown("""
### Como usar este sistema

1. **Coleta de Dados**: Primeiro, colete os dados mais recentes das APIs do Banco Central do Brasil.
2. **Dashboard Econ√¥mico**: Visualize os indicadores e suas rela√ß√µes.
3. **Previs√µes com ML**: Treine modelos preditivos e visualize previs√µes futuras.

### Sobre os Dados

Os dados s√£o obtidos diretamente das APIs do Banco Central do Brasil e incluem:
- **Infla√ß√£o (IPCA)**: √çndice de Pre√ßos ao Consumidor Amplo, medida oficial da infla√ß√£o no Brasil.
- **PIB Real**: Produto Interno Bruto ajustado pela infla√ß√£o.
- **D√≠vida/PIB**: Rela√ß√£o entre a d√≠vida p√∫blica e o PIB.
- **Taxa SELIC**: Taxa b√°sica de juros da economia brasileira.
- **Meta da SELIC**: Meta estabelecida pelo Copom.
- **Saldo em Transa√ß√µes Correntes**: Medida do balan√ßo de pagamentos.
- **Resultado Prim√°rio**: Indicador fiscal do governo.

### Sobre os Modelos de ML

Os modelos dispon√≠veis para previs√£o incluem:
- **Regress√£o Linear**: Modelo linear simples para identificar tend√™ncias.
- **Ridge e Lasso**: Variantes regularizadas da regress√£o linear.
- **Random Forest**: Modelo baseado em √°rvores de decis√£o para capturar rela√ß√µes n√£o lineares.

### Compartilhando o Projeto

Para compartilhar este projeto com colegas, voc√™ pode:
1. **Usar controle de vers√£o**: Hospede o c√≥digo no GitHub e compartilhe o reposit√≥rio.
2. **Compartilhar localmente**: Execute em seu computador e compartilhe o acesso via rede local.
3. **Implantar online**: Use servi√ßos como Streamlit Cloud para disponibilizar na web.
""")

# Rodap√©
st.markdown("---")
st.caption("Desenvolvido com Python, Streamlit e scikit-learn")